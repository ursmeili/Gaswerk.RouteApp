@using Gaswerk.RouteApp.Code
@using Gaswerk.RouteApp.Controllers
@using Gaswerk.RouteApp.Models
@model Tuple<Gaswerk.RouteApp.Models.Bewertung, bool, bool, int>
@{
    var bewertung = Model.Item1;
    var isReadOnly = Model.Item2;
    var isNew = Model.Item3;
    var routeId = Model.Item4;
}

@if (isReadOnly)
{
    <div class="row">
        <div class="col-2">
            @bewertung.Schwierigkeit.ToString()
        </div>
        <div class="col-3">
            @(bewertung.Schönheit > 0 ? bewertung.Schönheit.ToString() : "")
        </div>
        <div class="col-3">
            @bewertung.Kommentar
        </div>
        <div class="col-4">
            &nbsp;
        </div>
    </div>
}
else
{
    using (Ajax.BeginForm("Bewerten", "Route", new { id = routeId },
                           new AjaxOptions
                           {
                               UpdateTargetId = "ajax-form-target-bewertungsliste",
                           }))
    {
        if (!isNew){ @Html.MyValidationSummary()}
        <div class="row">
            <div class="col-2" id="ajax-target-schwierigkeitEdit">
                @Html.Action("Render", "SchwierigkeitEdit", new {m=new EditingSchwierigkeitModel(bewertung.Schwierigkeit, "ajax-target-schwierigkeitEdit")})
                @*@Html.MySchwierigkeitsgradDropDown(m => bewertung.Schwierigkeit)*@
            </div>
            <div class="col-3">
                @Html.TextBoxFor(b => bewertung.Schönheit, new { @class = "form-control" })
            </div>
            <div class="col-3">
                @Html.TextBoxFor(b => bewertung.Kommentar, new { @class = "form-control" })
            </div>
            <div class="col-4">
                @Html.SubmitButton(ButtonType.Success, (isNew ? "Bewerten" : "Bewertung ändern"))
                @if (!isNew)
                {
                    @Html.LinkButton(ButtonType.Danger, "Bewertung löschen", "DeleteBewertung", "Route", routeId)
                }
            </div>
        </div>
    }
}

